package training.csviewer.IO;

import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.Objects;

public class StringFileReader
{
    private final Charset chSet;

    public StringFileReader(Charset charSet)
    {
        Objects.requireNonNull(charSet, "Missing charset");
        this.chSet = charSet;
    }

    public List<String> readAllLines(Path filePath)
    {
        Objects.requireNonNull(filePath, "Path is missing.");
        List<String> lines;
        try
        {
            lines = Files.readAllLines(filePath, chSet);
        }
        catch(IOException e)
        {
            throw new RuntimeException("Can't load file: " + filePath);
        }
        return lines;
    }

    public List<String> readAllLines(String filePath)
    {
        return readAllLines(Paths.get(filePath));
    }

    /**
     * Returns a String of the whole text file. LineSeparator is <code>System.lineSeparator()</code>.<br/>
     * Not buffered, therefore only suitable for small files!
     * 
     * @param filePath
     * @return The whole text file as a String.
     */
    public String readWholeFile(Path filePath)
    {
        return readWholeFile(filePath, System.lineSeparator());
    }

    /**
     * Returns a String of the whole text file.
     * Not buffered, therefore only suitable for small files!
     * 
     * @param filePath
     * @return The whole text file as a String.
     */
    public String readWholeFile(Path resPath, String lineSeparator)
    {
        Objects.requireNonNull(resPath, "Path missing.");
        Objects.requireNonNull(lineSeparator, "Line sperarator missing.");
        
        List<String> lines = readAllLines(resPath);

        StringBuilder sb = new StringBuilder();
        for (String s : lines)
        {
            sb.append(s);
            sb.append(lineSeparator);
        }

        return sb.toString();
    }

    public String readWholeFile(String filePath)
    {
        return readWholeFile(filePath, System.lineSeparator());
    }

    public String readWholeFile(String filePath, String lineSeparator)
    {
        return readWholeFile(Paths.get(filePath), lineSeparator);
    }

}
